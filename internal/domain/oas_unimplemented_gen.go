// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// Health implements health operation.
//
// GET /health
func (UnimplementedHandler) Health(ctx context.Context) error {
	return ht.ErrNotImplemented
}

// ServiceCreateUser implements Service_createUser operation.
//
// Create a user
// - all fields must be provided, 400 otherwise
// - admin permission required.
//
// POST /users/
func (UnimplementedHandler) ServiceCreateUser(ctx context.Context, req *User) (r ServiceCreateUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ServiceDeleteUser implements Service_deleteUser operation.
//
// Delete User
// - admin permission required.
//
// DELETE /users/{userId}
func (UnimplementedHandler) ServiceDeleteUser(ctx context.Context, params ServiceDeleteUserParams) (r ServiceDeleteUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ServiceGetUser implements Service_getUser operation.
//
// Returns a User if user with provided userId exists, 404 otherwise.
//
// GET /users/{userId}
func (UnimplementedHandler) ServiceGetUser(ctx context.Context, params ServiceGetUserParams) (r ServiceGetUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ServiceListUsers implements Service_listUsers operation.
//
// Returns a list of all users.
//
// GET /users/
func (UnimplementedHandler) ServiceListUsers(ctx context.Context, params ServiceListUsersParams) (r ServiceListUsersRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ServicePatchUser implements Service_patchUser operation.
//
// Patch User
// - one of the fields must be provided, except id
// - admin permission required.
//
// PATCH /users/{userId}
func (UnimplementedHandler) ServicePatchUser(ctx context.Context, req *User, params ServicePatchUserParams) (r ServicePatchUserRes, _ error) {
	return r, ht.ErrNotImplemented
}

// ServicePutUser implements Service_putUser operation.
//
// Put a new User params
// - all fields must be provided, except id
// - admin permission required.
//
// PUT /users/{userId}
func (UnimplementedHandler) ServicePutUser(ctx context.Context, req *User, params ServicePutUserParams) (r ServicePutUserRes, _ error) {
	return r, ht.ErrNotImplemented
}
